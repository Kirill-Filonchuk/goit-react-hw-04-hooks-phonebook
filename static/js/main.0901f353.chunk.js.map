{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["Form","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","formSubmitHandler","reset","onSubmit","this","className","s","form","type","pattern","title","required","onChange","btnForm","Component","Filter","ContactList","visibleContact","onDeleteCont","list","map","id","item","onClick","App","useState","initialContact","contacts","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsetContacts","JSON","parse","setItem","stringify","ContactForm","cont","shortid","generate","checkName","toLowerCase","some","alert","normalizedFilter","con","includes","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0901f353.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport s from './ContactForm.module.css'\n  \nclass Form extends Component {\n    state = {\n     name: '',\n    number: '',\n    }\n    \n handleChange = event => {\n    const { name, value } = event.currentTarget;\n    // console.log(event.currentTarget);\n    // используем вычисляемые св-ва\n    this.setState({\n      [name]: value,\n    });\n    };\n    \n      handleSubmit = e => {\n    e.preventDefault();\n    // const { name, number } = this.state;\n    // console.log(`\n    //   name: ${name}\n    //   number: ${number}\n    // `);\n    this.props.formSubmitHandler({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n    \n    render() {\n        return (\n             <form onSubmit={this.handleSubmit} className={s.form}>\n          Name\n          \n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n         \n          Number\n         \n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n          \n          <button type=\"submit\" className={s.btnForm}>Add contact</button>\n        </form>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\n\nconst Filter =({value, onChange}) => (\n      <label>\n          Find contacts by name\n          <br />\n          <input type=\"text\" value={value} onChange={onChange} />\n        </label>\n)\n\nexport default Filter;","import React from 'react';\nimport s from './ContactList.module.css'\n\n\nconst ContactList = ({visibleContact, onDeleteCont}) => (\n  \n    <ul className={s.list}>\n        {visibleContact.map(({id, name, number }) => (\n            <li key={id} className={s.item}>\n                {name}:<span>{number}</span>\n                <button type=\"button\" onClick={()=>onDeleteCont(id)}className={s.btnForm}>Delete</button>\n            </li>\n        ))}\n    </ul>\n);\n\nexport default ContactList;\n /* was: this.state.contact */","import '../App/App.css';\nimport React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport initialContact from '../../data/start-data.json';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nfunction App() {\n  const [contacts, setContacts] = useState(initialContact);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsetContacts = JSON.parse(contacts);\n\n    if (parsetContacts) {\n      setContacts([...parsetContacts]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = ({ name, number }) => {\n    const cont = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const checkName = cont.name.toLowerCase();\n    if (contacts.some(item => item.name.toLowerCase() === `${checkName}`)) {\n      alert(`${cont.name} is already in contacts`);\n      return;\n    }\n    setContacts([...contacts, cont]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const onDeleteCont = id => {\n    setContacts(() => contacts.filter(con => con.id !== id));\n  };\n  // filter создаёт НОВЫЙ массив, в который войдут только те элементы arr, для которых вызов callback(item, i, arr) возвратит true.\n\n  const visibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContact = contacts.filter(con =>\n      con.name.toLowerCase().includes(normalizedFilter),\n    );\n    return visibleContact;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n\n      <ContactForm formSubmitHandler={formSubmitHandler} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n\n      <ContactList visibleContact={visibleContact()} onDeleteCont={onDeleteCont} />\n    </div>\n  );\n}\n\nexport default App;\n\n// class App extends Component {\n//   state = {\n//     contacts: initialContact,\n//     filter: '',\n//   };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parsetContacts = JSON.parse(contacts);\n\n//     if (parsetContacts) {\n//       this.setState({\n//         contacts: [...parsetContacts],\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prevState) {\n//     // console.log('prevState.contacts', prevState.contacts);\n//     // console.log('this.state.contacts', this.state.contacts);\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   formSubmitHandler = ({ name, number }) => {\n//     const cont = {\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     };\n\n//     const checkName = cont.name.toLowerCase();\n//     if (this.state.contacts.some(item => item.name.toLowerCase() === `${checkName}`)) {\n//       alert(`${cont.name} is already in contacts`);\n//       return;\n//     }\n//     this.setState(prevState => {\n//       const contacts = [...prevState.contacts, cont];\n//       return {\n//         contacts,\n//       };\n//     });\n//     // console.log('Arr', this.state.contacts);\n//   };\n\n//   changeFilter = e => {\n//     // console.log(e.currentTarget.value);\n//     this.setState({\n//       filter: e.currentTarget.value,\n//     });\n//   };\n\n//   onDeleteCont = id => {\n//     // console.log(id);\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(con => con.id !== id),\n//     }));\n//   };\n//   // filter создаёт НОВЫЙ массив, в который войдут только те элементы arr, для которых вызов callback(item, i, arr) возвратит true.\n\n//   visibleContact = () => {\n//     const normalizedFilter = this.state.filter.toLowerCase();\n//     const visibleContact = this.state.contacts.filter(con =>\n//       con.name.toLowerCase().includes(normalizedFilter),\n//     );\n//     return visibleContact;\n//   };\n\n//   render() {\n//     // const normalizedFilter = this.state.filter.toLowerCase();\n//     // const visibleContact = this.state.contacts.filter(con =>\n//     //   con.name.toLowerCase().includes(normalizedFilter),\n//     // );\n//     return (\n//       <div className=\"container\">\n//         <h1>Phonebook</h1>\n\n//         <ContactForm formSubmitHandler={this.formSubmitHandler} />\n\n//         <h2>Contacts</h2>\n//         <Filter value={this.state.filter} onChange={this.changeFilter} />\n\n//         <ContactList visibleContact={this.visibleContact()} onDeleteCont={this.onDeleteCont} />\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2wbrt\",\"item\":\"ContactList_item__1uv0W\",\"btnForm\":\"ContactList_btnForm__g71cB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2URGQ\",\"btnForm\":\"ContactForm_btnForm__24MZm\"};"],"sourceRoot":""}